// Copyright (c) 2019 Bita Hasheminezhad
// Copyright (c) 2019 Hartmut Kaiser
//
// Distributed under the Boost Software License, Version 1.0. (See accompanying
// file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

#include <phylanx/phylanx.hpp>

#include <hpx/hpx_main.hpp>
#include <hpx/include/lcos.hpp>
#include <hpx/testing.hpp>

#include <iostream>
#include <string>
#include <utility>
#include <vector>

#include <blaze/Math.h>

phylanx::execution_tree::primitive_argument_type compile_and_run(
    std::string const& codestr)
{
    phylanx::execution_tree::compiler::function_list snippets;
    phylanx::execution_tree::compiler::environment env =
        phylanx::execution_tree::compiler::default_environment();

    auto const& code = phylanx::execution_tree::compile(codestr, snippets, env);
    return code.run();
}

///////////////////////////////////////////////////////////////////////////////
void test_batch_dot_operation(std::string const& code,
    std::string const& expected_str)
{
    HPX_TEST_EQ(compile_and_run(code), compile_and_run(expected_str));
}

///////////////////////////////////////////////////////////////////////////////
int main(int argc, char* argv[])
{
    //2d2d
    test_batch_dot_operation(
        "batch_dot([[1, 2], [4, 5], [3, 6]], [[-5,-6],[-1, 1],[-7,-8]])",
        "[[-17],[  1],[-69]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2], [3, 4]], [[-5,-6],[-7,-8]], 1)", "[[-17],[-53]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2], [3, 4]], [[-5,-6],[ 7, 8]], make_list(1, 1))",
        "[[-17],[53]]");

    //2d3d
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[-5,-6, 1, 0],[-7,-8, 1, 0]"
        ",[-1,-2, 13, 2]],[[ 5, 6,-1, 5],[7, 1, 0, 8],[1, 1,-2, 2]]])",
        "[[-22, -28,  42,   6], [ 61,  35, -16,  72]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[-5,-6],[-7,-8],[-1,-2]], "
        "[[5, 6],[7, 8],[1, 2]]], 1)",
        "[[-22, -28],[ 61,  76]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[-5,-6, 3],[-7, 6,-8],[0,-1,-2]],"
        "[[5, 6, -4],[7, 1, 8],[1, 2, 0]]], make_list(-1))",
        "[[ -8, -19,  -8], [ 26,  81,  14]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[-5, 0,-6],[0, -7, -8], "
        "[-1,-2, 0]],[[5, 6, -1],[2, 3, 8],[1, 4, 2]]], make_list(1,1))",
        "[[ -8, -20, -22],[ 36,  63,  48]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[-5, 0,-6],[0, -7, -8], "
        "[-1,-2, 0]],[[5, 6, -1],[2, 3, 8],[1, 4, 2]]], make_list(1,2))",
        "[[-23, -38,  -5],[ 44,  71,  36]]");

    //2d4d
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[[-5,-6, 1, 0],[-7,-8, 1, 0],"
        "[-1,-2, 13, 2]],[[ 5, 6,-1, 5],[7, 1, 0, 8],[1, 1,-2, 2]]],"
        "[[[1, 2, 3, 4],[0, 5, 6, 7],[-1,-2, -3, 0]],[[ 7, 8, 9, 0],"
        "[-7, 1, 0, -8],[1, 1,-2, 2]]]])",
        "[[[-22, -28,  42,   6],[ 22,  11,  -7,  27]],[[ -2,  21,  24,  51],"
        "[ -1,  43,  24, -28]]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]], [[[[-7,-8, 1, 0]],[[ 5, 6,-1, 5]],"
        "[[-1,-2, 13, 2]]],[[[0, 5, 6, 7]],[[ 7, 8, 9, 0]],[[-1,-2, -3, 0]]]]"
        ", 1)",
        "[[[ 0, -2, 38, 16]], [[29, 48, 51, 28]]]");
    test_batch_dot_operation(
        "batch_dot([[1, 2, 3], [4, 5, 6]],[[[[-5,-6, 1],[-7, 1, 0],[-1,-2, 13]]"
        ",[[ 6,-1, 5],[ 1, 0, 8],[1, -2, 2]]],[[[1, 2, 4],[0, 5, 6],[-1,-2, 0]]"
        ",[[ 7, 9, 0],[-7, 0, -8],[1,-2, 2]]]], make_list(1,-1))",
        "[[[-14,  -5,  34],[ 19,  25,   3]],[[ 38,  61, -14],"
        "[ 73, -76,   6]]]");

    //3d2d
    test_batch_dot_operation(
        "batch_dot([[[-5, -6, 1, 0], [-7, -8, 1, 0], [-1, -2, 1, 0]],"
        "[[5, 6, 1, 0], [7, 1, 0, 8], [1, 1, 0, 2]]],[[1, 2, 3, 4], "
        "[5, 6, 7, 8]])",
        "[[-14, -20,  -2],[ 68, 105,  27]]");
    test_batch_dot_operation(
        "batch_dot([[[-5, -6, 1, 0], [-7, -8, 1, 0], [-1, -2, 1, 0]],"
        "[[5, 6, 1, 0], [7, 1, 0, 8], [1, 1, 0, 2]]],[[1, 2, 3, 4], "
        "[5, 6, 7, 8]], make_list(2,-1))",
        "[[-14, -20,  -2],[ 68, 105,  27]]");
    test_batch_dot_operation(
        "batch_dot([[[-5, -6, -4, -3],[13, 42, -7,-8],[-1,-2, 0, 0]], "
        "[[5, 6, 3, 5],[7, 6, 9, 8],[1, -1, -1, 2]]],[[1, 2, 1], [3, 4, 6]], "
        "make_list(1))",
        "[[ 20,  76, -18, -19], [ 49,  36,  39,  59]]");
    test_batch_dot_operation(
        "batch_dot([[[-5, -6, -4, -3],[13, 42, -7,-8],[-1,-2, 0, 0]], "
        "[[5, 6, 3, 5],[7, 6, 9, 8],[1, -1, -1, 2]]],[[1, 2, 1], [3, 4, 6]], "
        "make_list(-2,-1))",
        "[[ 20,  76, -18, -19], [ 49,  36,  39,  59]]");

    //3d3d
    test_batch_dot_operation(
        "batch_dot([[[1, 2, 3], [2, 3, 4]], [[1, 5, 6], [7, 0, 8]]], "
        "[[[13, 0, 42, 1], [1, 0, 0, 33], [5, 0, 0, 1]], [[1, 0, 65, 0],"
        " [3, 1, 0, 1], [-2, 0, 1, 1]]])",
        "[[[ 30,   0,  42,  70],[ 49,   0,  84, 105]],[[  4,  5,  71,  11]  "
        ",[ -9,   0, 463,   8]]]");
    test_batch_dot_operation(
        "batch_dot([[[1, 2, 3], [2, 3, 4]]], "
        "[[[13, 0, 42, 1], [1, 0, 0, 33], [5, 0, 0, 1]]], make_list(2,-2))",
        "[[[ 30,   0,  42,  70],[ 49,   0,  84, 105]]]");
    test_batch_dot_operation(
        "batch_dot([[[1, 2, 33], [2, 13, 4], [-1,-1,-2]], [[1, 5, 6], [7, 0, 8]"
        ", [2, 3,-42]]], [[[0, 0, 10,-2], [1, 0, -20, 0], [0, 0, 1, 6]], "
        "[[5, 2, 0, 0], [13, 0, 12, 1], [0, 1, 2, 1]]], make_list(-2))",
        "[[[  2,  0, -31, -8], [ 13,  0, -241, -10],[ 4,  0,  248, -78]]"
        ",[[96, 4,  88, 9],[ 25, 13, 6, 3] ,[ 134, -30,  12, -34]]]");
    test_batch_dot_operation(
        "batch_dot([[[1, 2, 33], [2, 13, 4]]],  "
        "[[[0, 2, 10,-2], [42, 4, 1, 6]]], make_list(1, -2))",
        "[[[ 84,  10,  12,  10],[546,  56,  33,  74],[168,  82, 334, -42]]]");
    test_batch_dot_operation(
        "batch_dot([[[1, 2, 3], [1,-2, 4]], [[-1, 5, 6], [7, 0, 8]]],  "
        "[[[13, 33, 42], [5, 65, 105], [-5, -65, -105]], [[1, 2, 0], [0,-2,-3]"
        ", [-13, -42, -33]]], -1)",
        "[[[ 205,  450, -450],[ 115,  295, -295]],[[ 9,  -28, -395], "
        " [ 7,  -24, -355]]]");
    test_batch_dot_operation(
        "batch_dot([[[-5, -6, 1], [-7, 1, 0], [-1, 1, 0]] "
        ",[[42, 33, 13], [65, 105, 5],[107, 23, 4]]],  "
        "[[[1, 2, 4], [3, 5, 8]],[[-1, -2, -4], [-3, -5,-8]]] "
        ", make_list(1,-1))",
        "[[[ -23,  -58],[  0,  -5],[ 1, 3]],[[ -600, -1307],[ -335,  -808],"
        "[-39, -96]]]");

    //3d4d
    test_batch_dot_operation(
        "batch_dot([[[1,2,0],[3,4,1]],[[2,5,6],[0,7,8]],[[0,0,0],[1,1,1]]], "
        "[[[[-5,-6, 1, 0],[-7,-8, 1, 0],[-1,-2, 13, 2]]],[[[1, 2, 3, 4],"
        "[0, 5, 6, 7],[-1,-2, -3, 0]]],[[[-1, -2, -3, -4],[-4, -5, -6, -7],"
        "[-1, 0, 0, 0]]]])",
        "[[[[-19, -22,   3,   0]], [[-44, -52,  20,   2]]],"
        "[[[ -4,  17,  18,  43]], [[ -8,  19,  18,  49]]],"
        "[[[  0,   0,   0,   0]], [[ -6,  -7,  -9, -11]]]]");
    test_batch_dot_operation(
        "batch_dot([[[3,4]],[[5,6]],[[7,8]]], "
        "[[[[-5,-6, 1, 0],[-7,-8, 1, 0],[-1,-2, 13, 2]]],[[[1, 2, 3, 4],"
        "[0, 5, 6, 7],[-1,-2, -3, 0]]],[[[-1, -2, -3, -4],[-4, -5, -6, -7],"
        "[-1, 0, 0, 0]]]], 1)",
        "[[[[-15, -18,   3,   0],[-21, -24,   3,   0],[ -3,  -6,  39,   6]],"
        "[[-20, -24,   4,   0], [-28, -32,   4,   0], [ -4,  -8,  52,   8]]],"
        "[[[  5,  10,  15,  20], [  0,  25,  30,  35], [ -5, -10, -15,   0]], "
        "[[  6,  12,  18,  24], [  0,  30,  36,  42], [ -6, -12, -18,   0]]],"
        "[[[ -7, -14, -21, -28], [-28, -35, -42, -49], [ -7,   0,   0,   0]], "
        "[[ -8, -16, -24, -32], [-32, -40, -48, -56], [ -8,   0,   0,   0]]]]");
    test_batch_dot_operation(
        "batch_dot([[[3,4,3],[1,1,0]],[[5,0,6],[2,4,1]]], "
        "[[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 8],[1, 2, 1, 3]]],"
        "[[[1, 2, 3, 4],[-1,-2, -3, 0]],[[-1, -2, 3, 4],[0, 5, 6, 7]]]],"
        "make_list(1,-2))",
        "[[[[ -7, -11,   4,   2],[-20,   2,   4,  27]],[[ -9, -14,   5,   2],"
        "[-27,   2,   5,  35]],[[ -6,  -9,   3,   0], [-21,   0,   3,  24]]],"
        "[[[  3,   6,   9,  20], [ -5,   0,  27,  34]],[[ -4,  -8, -12,   0],"
        "[  0,  20,  24,  28]],[[  5,  10,  15,  24], [ -6,  -7,  24,  31]]]]");
    test_batch_dot_operation(
        "batch_dot([[[3,4,0],[1,1,0],[2,0,2],[6,1,5]],[[5,0,6],[2,0,1],[3,-2,1]"
        ",[7,8,9]]], "
        "[[[[-2,-3, 1, 0],[-7,-1, 1, 0],[-1,-2, 1, 2]],[[5, 1, 1, 6],"
        "[-7, 0, 1, 8],[1, 2, 1, 3]]],[[[1, 2, 3, 4],[0, 5, 6, 7],"
        "[-1,-2, -3, 0]],[[-1, -2, 3, 4],[0, 5, 6, 7],[0, 5, 6, 7]]]],"
        "make_list(-2,3))",
        "[[[[ -7, -20,   9], [ 54,  29,  25]], [[-11, -29,  -4],"
        "[ 27, -20,   9]],[[  2,   2,  12],  [ 32,  42,  17]]],"
        "[[[ 46,  77, -18], [ 28,  77,  77]], [[ 26,  44,   6],"
        "[ 26,  44,  44]],[[ 47,  74, -11],  [ 31,  74,  74]]]]");
    test_batch_dot_operation(
        "batch_dot([[[3,4,3],[1,1,0]],[[5,0,6],[2,4,1]]], "
        "[[[[-2,-3, 1, 0],[-1,-2, 13, 2]],[[-7, 0, 1, 8],[1, 2, 1, 3]],"
        "[[-7, 0, 1, -8],[1, 2, 1, 33]]],[[[1, 42, 3, 4],[-1,-2, -3, 0]],"
        "[[-1, -2, 3, 4],[0, 15, 6, 7]],[[-1, -2, 3, 4],[0, -5, 65, 7]]]],"
        "make_list(2,1))",
        "[[[[-55,  -9,  10,   8],  [  4,   8,  46, 117]],"
        "[[ -9,  -3,   2,   8],  [  0,   0,  14,   5]]],"
        "[[[ -1, 198,  33,  44],  [ -5, -40, 375,  42]],"
        "[[ -3,  74,  21,  28],  [ -2,  51,  83,  35]]]]");
    test_batch_dot_operation(
        "batch_dot([[[3,4,3,2],[1,1,0,2]],[[7,5,0,6],[2,4,0,1]]], "
        "[[[[-2,-3, 1, 0],[-1,-2, 13, 2]],[[-7, 0, 1, 8],[1, 2, 1, 3]],"
        "[[-7, 0, 1, -8],[1, 2, 1, 33]]],[[[1, 42, 3, 4],[-1,-2, -3, 0]],"
        "[[-1, -2, 3, 4],[0, 15, 6, 7]],[[-1, -2, 3, 4],[0, -5, 65, 7]]]],"
        "make_list(2,-1))",
        "[[[[-15,  32],[ -2,  20],[-34,  80]],"
        "[[ -5,   1],[  9,   9],[-23,  69]]],"
        "[[[241, -17],[  7, 117],[  7,  17]],"
        "[[174, -10],[ -6,  67],[ -6, -13]]]]");

    //4d2d
    test_batch_dot_operation(
        "batch_dot([[[[-7,-8, 1, 0],[-1,-2, 13, 2], [2, 3, 5, 7]],[[5, 6,-1, 5]"
        ",[-2, 3, -5, 7],[1, 0, 0, -1]]],[[[0, 3, 1, 13],[0, 5, 6, 7],"
        "[-1,-2, -3, 0]],[[-1,-2, -3, 0],[2, 13, 1, 0],[ 7, 8, 9, 0]]]],"
        "[[1, 2, 3, 4], [5, 6, 7, 8]])",
        "[[[-20,  42,  51], [ 34,  17,  -3]],"
        "[[129, 128, -38], [-38,  95, 146]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-7,-8, 1, 0],[-1,-2, 13, 2]],[[ 5, 6,-1, 5],"
        "[1, 0, 0, -1]]],[[[0, 5, 6, 7], [-1,-2, -3, 0]],[[-1,-2, -3, 0], "
        "[ 7, 8, 9, 0]]]],"
        "[[1, 2], [7, 8]], make_list(-3,1))",
        "[[[ 3,  4, -1, 10], [ 1, -2, 13,  0]],"
        "[[-8, 19, 18, 49], [49, 50, 51,  0]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-7,-8, 1, 0],[-1,-2, 13, 2]],[[ 5, 6,-1, 5],"
        "[1, 0, 0, -1]]],[[[0, 5, 6, 7], [-1,-2, -3, 0]],[[-1,-2, -3, 0], "
        "[ 7, 8, 9, 0]]]],"
        "[[1, 2], [7, 8]], make_list(2,-1))",
        "[[[ -9, -12,  27,   4], [  7,   6,  -1,   3]],"
        "[[ -8,  19,  18,  49], [ 49,  50,  51,   0]]]");

    //4d3d
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-7,-1, 1, 0],[-1,-2, 1, 2]],[[5, 1, 1, 6],"
        "[-7, 0, 1, 8],[1, 2, 1, 3]]],[[[1, 2, 3, 4],[0, 5, 6, 7],"
        "[-1,-2, -3, 0]],[[-1, -2, 3, 4],[0, 5, 6, 7],[0, 5, 6, 7]]]],"
        "[[[3,4,0],[1,1,0],[2,0,2],[6,1,5]],"
        "[[5,0,6],[2,0,1],[3,-2,1],[7,8,9]]])",
        "[[[[ -7, -11,   2], [-20, -29,   2], [  9,  -4,  12]],"
        "[[ 54,  27,  32], [ 29, -20,  42], [ 25,   9,  17]]],"
        "[[[ 46,  26,  47], [ 77,  44,  74], [-18,   6, -11]],"
        "[[ 28,  26,  31], [ 77,  44,  74], [ 77,  44,  74]]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 8],"
        "[1, 2, 1, 3]]],[[[1, 2, 3, 4],[-1,-2, -3, 0]],[[-1, -2, 3, 4],"
        "[0, 5, 6, 7]]]],"
        "[[[3,4,3],[1,1,0]],[[5,0,6],[2,4,1]]], 1)",
        "[[[[-13, -15,  -6],  [ -9, -12,  -9],  [  4,   5,   3],"
         "[  8,   8,   0]], [[ -2,  -3,  -3],  [ -4,  -6,  -6],"
         "[  4,   5,   3],  [  9,  11,   6]]],[[[  3,  -4,   5],"
         "[  6,  -8,  10],  [ 21,  12,  21],  [ 28,  16,  28]],"
         "[[ -5,   0,  -6],  [  0,  20,  -7],  [ -3,  24, -12],"
         "[ 14,  28,   7]]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 8],[1, 2, 1, 3]]"
        ",[[-7, 0, 1, 8],[1, 2, 1, 3]]],[[[1, 2, 3, 4],[-1,-2, -3, 0]],"
        "[[-1, -2, 3, 4],[0, 5, 6, 7]],[[-7, 0, 1, 8],[1, 2, 1, 3]]]],"
        "[[[3,4,3],[0,0,0]],[[5,0,6],[2,4,1]]], make_list(-2,1))",
        "[[[[ -6,  -8,  -6],[ -9, -12,  -9],[  3,   4,   3],"
        "[  0,   0,   0]],[[-21, -28, -21], [  0,   0,   0],"
        "[  3,   4,   3], [ 24,  32,  24]],[[-21, -28, -21],"
        "[  0,   0,   0], [  3,   4,   3], [ 24,  32,  24]]],"
        "[[[  3,  -4,   5], [  6,  -8,  10], [  9, -12,  15],"
        "[ 20,   0,  24]],[[ -5,   0,  -6], [  0,  20,  -7],"
        "[ 27,  24,  24], [ 34,  28,  31]],[[-33,   4, -41],"
        "[  4,   8,   2], [  7,   4,   7], [ 46,  12,  51]]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 8],"
        "[1, 2, 1, 3]]],[[[1, 2, 3, 4],[-1,-2, -3, 0]],[[-1, -2, 3, 4],"
        "[0, 5, 6, 7]]]],"
        "[[[3,4],[1,1]],[[5,0],[2,4]]], make_list(1,2))",
        "[[[[-34,  -9],[ -9,  -3],[  7,   2],[ 32,   8]],"
        "[[  1,   0],[  2,   0],[  7,   2],[ 18,   5]]],"
        "[[[  5,  -2],[ 10,  -4],[ 15,  18],[ 20,  24]],"
        "[[ -5,  -2],[-10,  16],[-15,  18],[  0,  28]]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 2],"
        "[1, 2, 1, -3]],[[-7, 1, 1, 8],[1, 2, 1, 3]]],[[[1, 2, 3, 4],"
        "[-1,-2, -3, 0]],[[-1, -2, 3, 4],[0, 5, 6, 7]],[[-7, 0, 1, 8],"
        "[1, 2, 1, 3]]]],"
        "[[[3,4,3,2],[1,0,1,0]],[[5,0,6,-1],[2,4,1,2]]], make_list(-1))",
        "[[[[-15,  -1],[ -4,   0]], [[-14,  -6], [  8,   2]],"
        "[[  2,  -6],[ 20,   2]]],[[[ 19,  21], [-23, -13]],"
        "[[  9,   1],[ 29,  40]], [[-37,   3], [  8,  17]]]]");
    test_batch_dot_operation(
        "batch_dot([[[[-2,-3, 1, 0],[-1,-2, 1, 2]],[[-7, 0, 1, 8],[1, 2, 1, 3]]"
        ",[[7, 10, 1, 8],[1, -2, -1, 3]]],[[[1, 2, 3, 4],[-1,-2, -3, 0]],"
        "[[-1, -2, 3, 4],[0, 5, 6, 7]],[[0, 0, 1, 9],[1, 2, 0, 3]]]],"
        "[[[3,4],[1,1]],[[5,6],[2,4]]], make_list(2))",
        "[[[[-10,  -3],[-17,  -5],[  7,   2],[  8,   2]],"
        "[[-17,  -6],[  8,   2],[  7,   2],[ 36,  11]],"
        "[[ 25,   8],[ 22,   8],[ -1,   0],[ 36,  11]]],"
        "[[[ -1,  -2],[ -2,  -4],[ -3,  -6],[ 20,   8]],"
        "[[ -5,  -2],[ 20,  16],[ 51,  30],[ 62,  36]],"
        "[[  6,   4],[ 12,   8],[  5,   2],[ 63,  30]]]]");

    return hpx::util::report_errors();
}
